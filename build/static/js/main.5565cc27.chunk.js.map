{"version":3,"sources":["Components/CounterScene/CounterScene.tsx","config.tsx","Components/BuyScene/BuyScene.tsx","Components/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UpdateAction","config","currency","id","amount","imageUrl","size","CounterScene","props","IncrementUnit","event","UpdateCount","target","Add","DecrementUnit","Subtract","SaveCount","localStorage","setItem","JSON","stringify","state","units","total","eventTarget","action","unitId","closest","updatedCount","count","setState","update","$set","UpdateTotal","GetTotal","unit","hasOwnProperty","unitsFromStorage","getItem","unitsFromStorageParsed","parse","Object","keys","length","forEach","storedUnits","href","className","map","key","onClick","style","visibility","backgroundImage","width","GetCoinSize","height","right","aria-label","role","this","coinSize","Component","BuyScene","FocusPurchase","document","getElementById","focus","SavePrice","purchaseInput","purchase","value","parseFloat","replace","price","GetCoins","coins","highIndex","lowIndex","highAmount","lowAmount","i","fraction","max","push","item","type","name","onKeyUp","Home","CustomRouter","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5565cc27.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { IUnitCount } from \"../../Interfaces/IUnitCount.Interface\";\r\nimport config from \"../../config\";\r\nimport { ICurrency } from \"../../Interfaces/ICurrency.Interface\";\r\nimport update from \"immutability-helper\";\r\nimport \"./CounterScene.css\";\r\n\r\ninterface IState {\r\n  total: number;\r\n  storedUnits: IUnitCount;\r\n  units: IUnitCount;\r\n}\r\n\r\ninterface IProps {}\r\n\r\nenum UpdateAction {\r\n  Add,\r\n  Subtract\r\n}\r\n\r\nexport class CounterScene extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    var unitsFromStorage = localStorage.getItem(\"units\") || \"{}\";\r\n    var unitsFromStorageParsed = JSON.parse(unitsFromStorage) as IUnitCount;\r\n\r\n    if (Object.keys(unitsFromStorageParsed).length === 0) {\r\n      config.currency.forEach(function(unit) {\r\n        unitsFromStorageParsed[unit.id] = {\r\n          amount: unit.amount,\r\n          count: 0\r\n        };\r\n      });\r\n    }\r\n\r\n    this.state = {\r\n      total: JSON.parse(localStorage.getItem(\"total\") || \"\"),\r\n      storedUnits: unitsFromStorageParsed,\r\n      units: unitsFromStorageParsed\r\n    };\r\n  }\r\n\r\n  // FindUnitCount = (unitId: string) => {\r\n  //   if (!this.state.Units) return 0;\r\n\r\n  //   var count = this.state.Units.find(function(unitCount: IUnitCount) {\r\n  //     return unitCount.id === unitId;\r\n  //   });\r\n\r\n  //   return count ? count : 0;\r\n  // };\r\n\r\n  IncrementUnit = (event: React.MouseEvent<HTMLElement>) => {\r\n    this.UpdateCount(event.target as HTMLElement, UpdateAction.Add);\r\n  };\r\n\r\n  DecrementUnit = (event: React.MouseEvent<HTMLElement>) => {\r\n    this.UpdateCount(event.target as HTMLElement, UpdateAction.Subtract);\r\n  };\r\n\r\n  SaveCount = () => {\r\n    localStorage.setItem(\"units\", JSON.stringify(this.state.units));\r\n    localStorage.setItem(\"total\", JSON.stringify(this.state.total));\r\n  };\r\n\r\n  UpdateCount = (eventTarget: HTMLElement, action: UpdateAction) => {\r\n    var wrapper = (eventTarget as HTMLElement).closest(\r\n      \".coinWrapper\"\r\n    ) as HTMLElement;\r\n\r\n    var unitId = wrapper.id;\r\n    var count = this.state.units[unitId] ? this.state.units[unitId].count : 0;\r\n\r\n    var updatedCount = count;\r\n    if (action === UpdateAction.Add) {\r\n      updatedCount++;\r\n    } else {\r\n      updatedCount--;\r\n    }\r\n\r\n    if (updatedCount <= 0) {\r\n      updatedCount = 0;\r\n    }\r\n    this.setState(\r\n      {\r\n        units: update(this.state.units, {\r\n          [unitId]: { count: { $set: updatedCount } }\r\n        })\r\n      },\r\n      () => this.UpdateTotal()\r\n    );\r\n  };\r\n\r\n  UpdateTotal = () => {\r\n    var total = this.GetTotal();\r\n    this.setState({ total: total });\r\n  };\r\n\r\n  GetTotal = () => {\r\n    var total = 0;\r\n    for (const unit in this.state.units) {\r\n      if (this.state.units.hasOwnProperty(unit)) {\r\n        total += this.state.units[unit].amount * this.state.units[unit].count;\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"counterScene\">\r\n        <a href=\"/\" className=\"close\">\r\n          X\r\n        </a>\r\n        <ol id=\"coins\">\r\n          {config.currency.map((unit: ICurrency) => (\r\n            <li className=\"coinWrapper\" id={unit.id} key={unit.id}>\r\n              <span className=\"coinSubtract\" onClick={this.DecrementUnit}>\r\n                -\r\n              </span>\r\n              <span className=\"coinAdd\" onClick={this.IncrementUnit}>\r\n                +\r\n              </span>\r\n              <span\r\n                className=\"count\"\r\n                style={{\r\n                  visibility:\r\n                    this.state.units[unit.id] &&\r\n                    this.state.units[unit.id].count > 0\r\n                      ? \"visible\"\r\n                      : \"hidden\"\r\n                }}\r\n              >\r\n                {this.state.units[unit.id]\r\n                  ? this.state.units[unit.id].count\r\n                  : 0}\r\n              </span>\r\n              <div\r\n                className=\"coin\"\r\n                style={{\r\n                  backgroundImage: \"url(\" + unit.imageUrl + \")\",\r\n                  width: this.GetCoinSize(unit.size) + \"rem\",\r\n                  height: this.GetCoinSize(unit.size) + \"rem\",\r\n                  right: this.GetCoinSize(unit.size) / 2 - 0.5 + \"rem\"\r\n                }}\r\n                onClick={this.IncrementUnit}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        <div id=\"footer\">\r\n          <span id=\"result\">\r\n            <span aria-label=\"user icon\" role=\"img\">\r\n              👸 {this.state.total} kr\r\n            </span>\r\n          </span>\r\n          <button id=\"save\" onClick={this.SaveCount}>\r\n            <span aria-label=\"save\" role=\"img\">\r\n              ✔️\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  GetCoinSize(coinSize: number): number {\r\n    return 10 * coinSize;\r\n  }\r\n}\r\n\r\nexport default CounterScene;\r\n","import { IConfig } from \"./Interfaces/IConfig.Interface\";\r\n\r\nlet config: IConfig = {\r\n  currency: [\r\n    {\r\n      id: \"pointFive\",\r\n      amount: 0.5,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g915.jpg\",\r\n      size: 0.65\r\n    },\r\n    {\r\n      id: \"one\",\r\n      amount: 1.0,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g798.jpg\",\r\n      size: 0.6\r\n    },\r\n    {\r\n      id: \"two\",\r\n      amount: 2.0,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g796.jpg\",\r\n      size: 0.75\r\n    },\r\n    {\r\n      id: \"five\",\r\n      amount: 5.0,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g1429.jpg\",\r\n      size: 1\r\n    },\r\n    {\r\n      id: \"ten\",\r\n      amount: 10.0,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g790.jpg\",\r\n      size: 0.7\r\n    },\r\n    {\r\n      id: \"twenty\",\r\n      amount: 20.0,\r\n      imageUrl: \"https://en.numista.com/catalogue/photos/danemark/g788.jpg\",\r\n      size: 0.9\r\n    }\r\n  ]\r\n};\r\n\r\nexport default config;\r\n","import React, { Component } from \"react\";\r\nimport \"./BuyScene.css\";\r\n\r\ninterface IState {\r\n  total: number;\r\n  price: number;\r\n}\r\n\r\ninterface IProps {}\r\n\r\nexport class BuyScene extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      total: JSON.parse(localStorage.getItem(\"total\") || \"\"),\r\n      price: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.FocusPurchase();\r\n  }\r\n\r\n  FocusPurchase = () => {\r\n    let purchaseInput = document.getElementById(\"purchase\") as HTMLInputElement;\r\n    purchaseInput.focus();\r\n  };\r\n\r\n  SavePrice = () => {\r\n    let purchaseInput = document.getElementById(\"purchase\") as HTMLInputElement;\r\n    let purchase = purchaseInput.value\r\n      ? parseFloat(purchaseInput.value.replace(\",\", \".\"))\r\n      : 0;\r\n    this.setState({ price: purchase });\r\n  };\r\n\r\n  GetCoins = () => {\r\n    let coins: any[] = [[], []];\r\n\r\n    let highIndex = 0;\r\n    let lowIndex = 1;\r\n    let highAmount = this.state.total;\r\n    let lowAmount = this.state.price;\r\n\r\n    if (lowAmount > highAmount) {\r\n      highAmount = this.state.price;\r\n      lowAmount = this.state.total;\r\n      highIndex = 1;\r\n      lowIndex = 0;\r\n    }\r\n\r\n    let percentage = (lowAmount / highAmount) * 100;\r\n\r\n    // let modulus = amount % 10;\r\n    let max = 20;\r\n    let i = max;\r\n    let fraction = (max / 100) * percentage;\r\n\r\n    while (i >= 0) {\r\n      if (i <= fraction) {\r\n        coins[lowIndex].push(<li key={\"one_\" + i} />);\r\n      }\r\n\r\n      coins[highIndex].push(<li key={\"two_\" + i} />);\r\n      i--;\r\n    }\r\n\r\n    // if (modulus % 10 !== 0) {\r\n    //   result.unshift(<li className=\"andABit\" />);\r\n    // }\r\n    return (\r\n      <div className=\"coinStack\">\r\n        <ol>{coins[0].map((item: any) => item)}</ol>\r\n        <ol className=\"price\">{coins[1].map((item: any) => item)}</ol>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"buyScene\">\r\n        <a href=\"/\" className=\"close\">\r\n          X\r\n        </a>\r\n        {this.GetCoins()}\r\n        <div\r\n          id=\"footer\"\r\n          className={this.state.total >= this.state.price ? \"\" : \"error\"}\r\n        >\r\n          <span id=\"userIcon\" aria-label=\"user icon\" role=\"img\">\r\n            👸 {this.state.total} kr\r\n          </span>\r\n          <span id=\"result\">\r\n            {/* {this.state.total >= this.state.price ? \"Ja\" : \"Nej\"} */}\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"purchase\"\r\n            id=\"purchase\"\r\n            onKeyUp={this.SavePrice}\r\n          />\r\n          <span\r\n            id=\"purchaseIcon\"\r\n            aria-label=\"input purchase price\"\r\n            role=\"img\"\r\n            onClick={this.FocusPurchase}\r\n          >\r\n            🛒\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyScene;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\ninterface IState {\r\n  total: number;\r\n}\r\ninterface IProps {}\r\n\r\nexport class Home extends Component<IProps, IState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = { total: JSON.parse(localStorage.getItem(\"total\") || \"\") };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"homeScene\">\r\n        <div className=\"sceneLinks\">\r\n          <a className=\"sceneLink\" href=\"/count\">\r\n            <span aria-label=\"Count your coins\" role=\"img\">\r\n              👛\r\n            </span>\r\n            Tæl\r\n          </a>\r\n          <a className=\"sceneLink\" href=\"/buy\">\r\n            <span aria-label=\"check a price\" role=\"img\">\r\n              🛒\r\n            </span>\r\n            køb\r\n          </a>\r\n        </div>\r\n        <div id=\"footer\">\r\n          <span id=\"result\">\r\n            <span aria-label=\"user icon\" role=\"img\">\r\n              👸 {this.state.total} kr\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CounterScene from \"./Components/CounterScene/CounterScene\";\nimport BuyScene from \"./Components/BuyScene/BuyScene\";\nimport Home from \"./Components/Home/Home\";\nimport \"./App.css\";\n\nfunction CustomRouter() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/count\" component={CounterScene} />\n      <Route path=\"/buy\" component={BuyScene} />\n    </Router>\n  );\n}\n\nexport default CustomRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}